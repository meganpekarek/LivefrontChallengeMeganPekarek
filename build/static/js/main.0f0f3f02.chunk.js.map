{"version":3,"sources":["components/CategoryCard/CategoryCard.js","components/CategoryCard/index.js","images/myMealLogo.svg","components/PageHeader/PageHeader.js","components/PageHeader/index.js","components/CategoryCardLoader/CategoryCardLoader.js","components/CategoryCardLoader/index.js","views/Categories.js","components/RecipeCard/RecipeCard.js","components/RecipeCard/index.js","components/RecipeCardLoader/RecipeCardLoader.js","components/RecipeCardLoader/index.js","views/Recipes.js","images/backArrow.svg","components/RecipeDetailsLoader/RecipeDetailsLoader.js","components/RecipeDetailsLoader/index.js","views/RecipeDetails.js","reportWebVitals.js","index.js"],"names":["CategoryCard","props","category","Fragment","className","onClick","history","push","pathname","state","src","strCategoryThumb","alt","strCategory","PageHeader","subheader","Logo","CategoryCardLoader","color","highlightColor","circle","height","width","Categories","useState","categories","setCategories","loading","setLoading","useEffect","axios","get","then","res","data","cards","Array","map","e","i","idCategory","RecipeCard","recipe","strMealThumb","strMeal","RecipeCardLoader","Recipes","recipes","setRecipes","categoryName","location","localStorage","setItem","JSON","stringify","parse","getItem","meals","idMeal","RecipeDetailsLoader","RecipeDetails","setRecipe","mealId","ingredients","measurements","Object","entries","key","value","includes","ingredientsList","forEach","ingredient","index","BackArrow","goBack","item","strInstructions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f0f3f02.chunk.js","sourcesContent":["import './CategoryCard.css';\nimport React from 'react'\n\nfunction CategoryCard(props) {\n  const {category} = props;\n\n  const goToRecipes = () => {\n    props.history.push({\n      pathname: '/recipes',\n      state: {\n        category: category\n      }\n    })\n  }\n\n  return (\n      <React.Fragment>\n        <div className=\"categoryCard__wrapper\" onClick={goToRecipes}>\n          <div className=\"categoryCard__imgWrapper\">\n            <img className=\"categoryCard__img\" src={category.strCategoryThumb} alt=\"food-category\" />\n          </div>\n          <div>\n            <header className=\"categoryCard__header\">{category.strCategory}</header>\n          </div>\n        </div>\n      </React.Fragment>\n  );\n}\n\nexport default CategoryCard;\n","import CategoryCard from './CategoryCard.js';\n\nexport default CategoryCard;","export default __webpack_public_path__ + \"static/media/myMealLogo.52903069.svg\";","import './PageHeader.css';\nimport React from 'react'\nimport Logo from '../../images/myMealLogo.svg'\n\nfunction PageHeader(props) {\n  const {subheader} = props;\n\n  const goToHomePage = () => {\n    props.history.push('/');\n  }\n\n  return (\n      <React.Fragment>\n        <div className=\"page__headerWrapper\">\n          <header className=\"page__headerText\" onClick={goToHomePage}>MY <img  className=\"page__headerLogo\" src={Logo} alt=\"my meal logo\" /> MEAL</header>\n          <span className=\"page__subHeader\">{subheader}</span>\n        </div>\n      </React.Fragment>\n  );\n}\n\nexport default PageHeader;","import PageHeader from './PageHeader.js';\n\nexport default PageHeader;","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from 'react'\nimport './CategoryCardLoader.css';\n\nfunction CategoryCardLoader() {\n\n    return (\n        <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n            <div className=\"categoryCardLoader__wrapper\">\n                <div className=\"categoryCardLoader__imgWrapper\">\n                    <Skeleton circle={true} height={70} width={70} />\n                </div>\n                <div>\n                    <Skeleton className=\"categoryCardLoader__header\" />\n                </div>\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nexport default CategoryCardLoader;\n","import CategoryCardLoader from './CategoryCardLoader.js';\n\nexport default CategoryCardLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport CategoryCard from '../components/CategoryCard'\nimport PageHeader from '../components/PageHeader'\nimport CategoryCardLoader from '../components/CategoryCardLoader'\n\nfunction Categories(props) {\n\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\n      .then(res => {\n        setCategories(res.data.categories);\n        setLoading(false);\n      })\n  }, []);\n\n  const loadingCardCount = 8;\n  let cards = ([...Array(loadingCardCount)].map((e, i) => <CategoryCardLoader key={i} />));\n  if(!loading) {\n    cards = (\n        categories.map(category => (\n          <CategoryCard key={category.idCategory} category={category} history={props.history}></CategoryCard>\n        ))\n    )\n  }\n\n  return (\n    <div className=\"App\">\n          <PageHeader subheader=\"Categories\" history={props.history} />\n          <div className=\"app__cardsWrapper\">\n            <div className=\"app__cardsContainer\">\n              {cards}\n            </div>\n          </div>\n    </div>\n  );\n}\n\nexport default Categories;\n","import './RecipeCard.css';\nimport React from 'react'\n\nfunction RecipeCard(props) {\n  const {recipe} = props;\n\n  const goToRecipe = () => {\n    props.history.push({\n      pathname: '/recipedetails',\n      state: {\n        recipe: recipe\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <div className=\"recipeCard__wrapper\" onClick={goToRecipe}>\n          <img className=\"recipeCard__img\" src={recipe.strMealThumb} alt=\"recipe-cover\" />\n          <div className=\"recipeCard__headerWrapper\">\n            <header className=\"recipeCard__header\">{recipe.strMeal}</header>\n          </div>\n        </div>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default RecipeCard;","import RecipeCard from './RecipeCard.js';\n\nexport default RecipeCard;","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from 'react'\nimport './RecipeCardLoader.css';\n\nfunction RecipeCardLoader() {\n\n    return (\n        <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n            <div className=\"recipeCardLoader__wrapper\">\n                <Skeleton className=\"recipeCardLoader__header\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nexport default RecipeCardLoader;\n","import RecipeCardLoader from './RecipeCardLoader.js';\n\nexport default RecipeCardLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport RecipeCard from '../components/RecipeCard'\nimport PageHeader from '../components/PageHeader'\nimport RecipeCardLoader from '../components/RecipeCardLoader'\n\nfunction Recipes(props) {\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  let categoryName = \"\"\n  if(props.location.state) {\n    categoryName = props.location.state.category.strCategory;\n    localStorage.setItem('category', JSON.stringify(props.location.state.category));\n  } else {\n    categoryName = JSON.parse(localStorage.getItem('category')).strCategory;\n  }\n   \n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=` + categoryName)\n      .then(res => {\n        setRecipes(res.data.meals);\n        setLoading(false);\n      })\n  });\n\n  let subheader = categoryName + ' Recipes'\n\n  const loadingCardCount = 8;\n  let cards = ([...Array(loadingCardCount)].map((e, i) => <RecipeCardLoader key={i} />));\n  if(!loading) {\n    cards = (\n      recipes.map(recipe => (\n        <RecipeCard key={recipe.idMeal} recipe={recipe}  history={props.history}></RecipeCard>\n      ))\n    )\n  }\n\n  return (\n    <div className=\"App\">\n          <PageHeader subheader={subheader} history={props.history} />\n          <div className=\"app__cardsWrapper\">\n            <div className=\"app__cardsContainer\">\n              {cards}\n            </div>\n          </div>\n    </div>\n  );\n}\n\nexport default Recipes;\n","export default __webpack_public_path__ + \"static/media/backArrow.dfac1a3f.svg\";","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from 'react'\nimport './RecipeDetailsLoader.css';\nimport '../../App.css'\n\nfunction RecipeDetailsLoader() {\n\n    const ingredientCount = 8;\n\n    return (\n            <React.Fragment>\n                <section className=\"recipeDetails__headerWrapper\">\n                    <Skeleton className=\"backArrow\" />\n                </section>\n                <section className=\"recipeDetails__contentWrapper\">\n                    <div className=\"recipeDetails__recipeContent\">\n                        <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n                        <ul className=\"recipeDetails__ingredientsList recipeDetailsLoader__ingredientsList\">\n                            {[...Array(ingredientCount)].map((e, i) => <Skeleton className=\"recipeDetailsLoader__ingredients\" key={i} />)}\n                        </ul>\n                    </div>\n                    <div className=\"recipeDetails__recipeContent\">\n                        <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n                        <Skeleton className=\"recipeDetails__instructionsText recipeDetailsLoader__instructions\" />\n                    </div>\n                    <Skeleton className=\"recipeDetailsLoader__mealImage\" height={250} width={250}/>\n                </section>\n            </React.Fragment>\n    );\n}\n\nexport default RecipeDetailsLoader;\n","import RecipeDetailsLoader from './RecipeDetailsLoader.js';\n\nexport default RecipeDetailsLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport BackArrow from '../images/backArrow.svg'\nimport RecipeDetailsLoader from '../components/RecipeDetailsLoader';\n\nfunction RecipeDetails(props) {\n\n  const [recipe, setRecipe] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  let mealId = \"\"\n  if(props.location.state) {\n    mealId = props.location.state.recipe.idMeal;\n    localStorage.setItem('meal', JSON.stringify(props.location.state.recipe));\n  } else {\n    mealId = JSON.parse(localStorage.getItem('meal')).idMeal;\n  }\n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=` + mealId)\n      .then(res => {\n        setRecipe(res.data.meals[0]);\n        setLoading(false);\n      })\n  });\n\n  let ingredients = [];\n  let measurements = [];\n  for (const [key, value] of Object.entries(recipe)) {\n    if(key.includes('Ingredient') && value !== null && value !== \"\") {\n      ingredients.push(value)\n    }\n    if(key.includes('Measure') && value !== null && value !== \"\") {\n      measurements.push(value)\n    }\n  };\n\n  let ingredientsList = []\n  ingredients.forEach((ingredient, index) => {\n    ingredientsList.push(measurements[index] + ' ' + ingredient);\n  });\n\n  const goBack = () => {\n    props.history.goBack();\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loading && (\n        <RecipeDetailsLoader />\n      )}\n      {!loading && (\n        <React.Fragment>\n          <section className=\"recipeDetails__headerWrapper\">\n            <img className=\"backArrow\" src={BackArrow} onClick={goBack} alt=\"back-arrow\" />\n            <header className=\"recipeDetails__headerText\">{recipe.strMeal}</header>\n          </section>\n          <section className=\"recipeDetails__contentWrapper\">\n            <div className=\"recipeDetails__recipeContent\">\n              <span className=\"recipeDetails__recipeContentHeader\">Ingredients</span>\n              <hr className=\"recipeDetails__contentSeparator\" />\n              <ul className=\"recipeDetails__ingredientsList\">\n                {ingredientsList.map(item => (\n                  <li key={item}>{item}</li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"recipeDetails__recipeContent\">\n              <span className=\"recipeDetails__recipeContentHeader\">Instructions</span>\n              <hr className=\"recipeDetails__contentSeparator\" />\n              <p className=\"recipeDetails__instructionsText\">\n                {recipe.strInstructions}\n              </p>\n            </div>\n            <img className=\"recipeDetails__mealImage\" src={recipe.strMealThumb} alt=\"recipe-cover\" />\n          </section>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default RecipeDetails;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Categories from './views/Categories'\nimport Recipes from './views/Recipes'\nimport RecipeDetails from './views/RecipeDetails'\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nconst routing = (\n  <Router>\n    <div className=\"app__wrapper\">\n      <Switch>\n        <Route exact path=\"/\" component={Categories} />\n        <Route path=\"/recipes\" component={Recipes} />\n        <Route path=\"/recipedetails\" component={RecipeDetails} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}