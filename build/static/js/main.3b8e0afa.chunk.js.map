{"version":3,"sources":["components/CategoryCard/CategoryCard.js","components/CategoryCard/index.js","images/myMealLogo.svg","images/backArrow.svg","components/PageHeader/PageHeader.js","components/PageHeader/index.js","components/CategoryCardLoader/CategoryCardLoader.js","components/CategoryCardLoader/index.js","views/Categories.js","components/TextCard/TextCard.js","components/TextCard/index.js","components/TextCardLoader/TextCardLoader.js","components/TextCardLoader/index.js","views/ByIngredient.js","views/ByRegion.js","components/RecipeCard/RecipeCard.js","components/RecipeCard/index.js","components/RecipeCardLoader/RecipeCardLoader.js","components/RecipeCardLoader/index.js","views/Recipes.js","components/RecipeDetailsLoader/RecipeDetailsLoader.js","components/RecipeDetailsLoader/index.js","views/RecipeDetails.js","reportWebVitals.js","views/PageNotFound.js","index.js"],"names":["CategoryCard","props","category","role","className","onClick","history","push","pathname","strCategory","state","selection","queryParamType","src","strCategoryThumb","alt","PageHeader","loc","useLocation","useState","activeFilter","setActiveFilter","useEffect","goToFilter","filter","subheader","Fragment","includes","goBack","BackArrow","Logo","CategoryCardLoader","color","highlightColor","circle","height","width","Categories","categories","setCategories","loading","setLoading","loadError","setLoadError","axios","get","then","res","data","catch","cards","Array","map","e","i","idCategory","TextCard","cardText","TextCardLoader","ByIngredient","ingredients","setIngredients","meals","sort","a","b","ingA","strIngredient","toUpperCase","ingB","ingredient","idIngredient","ByRegion","regions","setRegions","region","strArea","RecipeCard","recipe","idMeal","strMealThumb","strMeal","RecipeCardLoader","Recipes","recipes","setRecipes","selectionName","queryType","location","localStorage","setItem","JSON","stringify","parse","getItem","length","RecipeDetailsLoader","RecipeDetails","setRecipe","mealId","measurements","Object","entries","key","value","ingredientsList","forEach","index","item","strInstructions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","PageNotFound","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b8e0afa.chunk.js","sourcesContent":["import \"./CategoryCard.css\";\nimport React from \"react\";\n\nfunction CategoryCard(props) {\n  const { category } = props;\n\n  const goToRecipes = () => {\n    props.history.push({\n      pathname: \"/recipes/\" + category.strCategory,\n      state: {\n        selection: category.strCategory,\n        queryParamType: \"c=\",\n      },\n    });\n  };\n\n  return (\n    <div role=\"button\" className=\"categoryCard__wrapper\" onClick={goToRecipes}>\n      <div className=\"categoryCard__imgWrapper\">\n        <img\n          role=\"category-card-img\"\n          className=\"categoryCard__img\"\n          src={category.strCategoryThumb}\n          alt=\"category cover\"\n        />\n      </div>\n      <div>\n        <header className=\"categoryCard__header\">{category.strCategory}</header>\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryCard;\n","import CategoryCard from \"./CategoryCard.js\";\n\nexport default CategoryCard;\n","export default __webpack_public_path__ + \"static/media/myMealLogo.52903069.svg\";","export default __webpack_public_path__ + \"static/media/backArrow.dfac1a3f.svg\";","import \"./PageHeader.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Logo from \"../../images/myMealLogo.svg\";\nimport BackArrow from \"../../images/backArrow.svg\";\n\nfunction PageHeader(props) {\n  let loc = useLocation();\n  let [activeFilter, setActiveFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (loc.pathname === \"/\") {\n      setActiveFilter(\"categories\");\n    } else if (loc.pathname === \"/by-ingredient\") {\n      setActiveFilter(\"ingredients\");\n    } else if (loc.pathname === \"/by-region\") {\n      setActiveFilter(\"regions\");\n    }\n  }, [loc.pathname]);\n\n  const goToFilter = (filter) => {\n    props.history.push(filter);\n  };\n\n  const goBack = () => {\n    props.history.goBack();\n  };\n\n  const subheader = props.subheader ? (\n    <span className=\"page__filterOption\">{props.subheader}</span>\n  ) : (\n    <React.Fragment>\n      <button\n        className={`page__filterOption ${\n          activeFilter === \"categories\" ? \"page__filterActive\" : \"\"\n        }`}\n        onClick={() => goToFilter(\"/\")}\n      >\n        By Category\n      </button>\n      <button\n        className={`page__filterOption ${\n          activeFilter === \"ingredients\" ? \"page__filterActive\" : \"\"\n        }`}\n        onClick={() => goToFilter(\"/by-ingredient\")}\n      >\n        By Ingredient\n      </button>\n      <button\n        className={`page__filterOption ${\n          activeFilter === \"regions\" ? \"page__filterActive\" : \"\"\n        }`}\n        onClick={() => goToFilter(\"/by-region\")}\n      >\n        By Region\n      </button>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"page__headerWrapper\">\n        {loc.pathname.includes(\"/recipes\") && (\n          <button className=\"page__backArrow app__backArrow\" onClick={goBack}>\n            <img className=\"app__backArrowImg\" src={BackArrow} alt=\"go back\" />\n          </button>\n        )}\n        <header className=\"page__headerText\">\n          MY <img className=\"page__headerLogo\" src={Logo} alt=\"my meal logo\" />{\" \"}\n          MEAL\n        </header>\n        <div className=\"page__filtersWrapper\">{subheader}</div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default PageHeader;\n","import PageHeader from \"./PageHeader.js\";\n\nexport default PageHeader;\n","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from \"react\";\nimport \"./CategoryCardLoader.css\";\n\nfunction CategoryCardLoader() {\n  return (\n    <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n      <div className=\"categoryCardLoader__wrapper\">\n        <div className=\"categoryCardLoader__imgWrapper\">\n          <Skeleton circle={true} height={70} width={70} />\n        </div>\n        <div>\n          <Skeleton className=\"categoryCardLoader__header\" />\n        </div>\n      </div>\n    </SkeletonTheme>\n  );\n}\n\nexport default CategoryCardLoader;\n","import CategoryCardLoader from \"./CategoryCardLoader.js\";\n\nexport default CategoryCardLoader;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CategoryCard from \"../components/CategoryCard\";\nimport PageHeader from \"../components/PageHeader\";\nimport CategoryCardLoader from \"../components/CategoryCardLoader\";\n\nfunction Categories(props) {\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\n      .then((res) => {\n        setCategories(res.data.categories);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadError(true);\n      });\n  }, []);\n\n  const loadingCardCount = 8;\n  let cards = [...Array(loadingCardCount)].map((e, i) => (\n    <CategoryCardLoader key={i} />\n  ));\n  if (!loading) {\n    cards = categories.map((category) => (\n      <CategoryCard\n        key={category.idCategory}\n        category={category}\n        history={props.history}\n      />\n    ));\n  }\n\n  return (\n    <div className=\"App\">\n      <PageHeader history={props.history} />\n      <div className=\"app__cardsWrapper\">\n        <div className=\"app__cardsContainer\">\n          {!loadError ? cards : <span>Could not load categories</span>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Categories;\n","import \"./TextCard.css\";\nimport React from \"react\";\n\nfunction TextCard(props) {\n  const { cardText, queryParamType } = props;\n\n  const goToRecipes = () => {\n    props.history.push({\n      pathname: \"/recipes/\" + cardText,\n      state: {\n        selection: cardText,\n        queryParamType: queryParamType,\n      },\n    });\n  };\n\n  return (\n    <div role=\"button\" className=\"textCard__wrapper\" onClick={goToRecipes}>\n      <header className=\"textCard__header\">{cardText}</header>\n    </div>\n  );\n}\n\nexport default TextCard;\n","import TextCard from \"./TextCard.js\";\n\nexport default TextCard;\n","import \"../TextCard/TextCard.css\";\nimport React from \"react\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nfunction TextCardLoader() {\n  return (\n    <React.Fragment>\n      <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n        <div className=\"textCard__wrapper\">\n          <div>\n            <Skeleton className=\"textCard__header\" />\n          </div>\n        </div>\n      </SkeletonTheme>\n    </React.Fragment>\n  );\n}\n\nexport default TextCardLoader;\n","import TextCardLoader from \"./TextCardLoader.js\";\n\nexport default TextCardLoader;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextCard from \"../components/TextCard\";\nimport PageHeader from \"../components/PageHeader\";\nimport TextCardLoader from \"../components/TextCardLoader\";\n\nfunction ByIngredient(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://www.themealdb.com/api/json/v1/1/list.php?i=list`)\n      .then((res) => {\n        setIngredients(res.data.meals);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadError(true);\n      });\n  }, []);\n\n  const loadingCardCount = 16;\n  let cards = [...Array(loadingCardCount)].map((e, i) => (\n    <TextCardLoader key={i} />\n  ));\n\n  if (!loading) {\n    let sortedIngredients = ingredients.sort((a, b) => {\n      const ingA = a.strIngredient.toUpperCase();\n      const ingB = b.strIngredient.toUpperCase();\n      if (ingA < ingB) {\n        return -1;\n      }\n      if (ingA > ingB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    cards = sortedIngredients.map((ingredient) => (\n      <TextCard\n        key={ingredient.idIngredient}\n        cardText={ingredient.strIngredient}\n        queryParamType=\"i=\"\n        history={props.history}\n      />\n    ));\n  }\n\n  return (\n    <div className=\"App\">\n      <PageHeader history={props.history} />\n      <div className=\"app__cardsWrapper\">\n        <div className=\"app__cardsContainer\">\n          {!loadError ? cards : <span>Could not load ingredients</span>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ByIngredient;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextCard from \"../components/TextCard\";\nimport PageHeader from \"../components/PageHeader\";\nimport TextCardLoader from \"../components/TextCardLoader\";\n\nfunction ByRegion(props) {\n  const [regions, setRegions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://www.themealdb.com/api/json/v1/1/list.php?a=list`)\n      .then((res) => {\n        setRegions(res.data.meals);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadError(true);\n      });\n  }, []);\n\n  const loadingCardCount = 16;\n  let cards = [...Array(loadingCardCount)].map((e, i) => (\n    <TextCardLoader key={i} />\n  ));\n\n  if (!loading) {\n    cards = regions.map((region) => (\n      <TextCard\n        key={region.strArea}\n        cardText={region.strArea}\n        queryParamType=\"a=\"\n        history={props.history}\n      />\n    ));\n  }\n\n  return (\n    <div className=\"App\">\n      <PageHeader history={props.history} />\n      <div className=\"app__cardsWrapper\">\n        <div className=\"app__cardsContainer\">\n          {!loadError ? cards : <span>Could not load regions</span>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ByRegion;\n","import \"./RecipeCard.css\";\nimport React from \"react\";\n\nfunction RecipeCard(props) {\n  const { recipe } = props;\n\n  const goToRecipe = () => {\n    props.history.push({\n      pathname: \"/recipe-details/\" + recipe.idMeal,\n      state: {\n        recipe: recipe,\n      },\n    });\n  };\n\n  return (\n    <div role=\"button\" className=\"recipeCard__wrapper\" onClick={goToRecipe}>\n      <img\n        role=\"recipe-card-img\"\n        className=\"recipeCard__img\"\n        src={recipe.strMealThumb}\n        alt=\"recipe cover\"\n      />\n      <div className=\"recipeCard__headerWrapper\">\n        <header className=\"recipeCard__header\">{recipe.strMeal}</header>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeCard;\n","import RecipeCard from \"./RecipeCard.js\";\n\nexport default RecipeCard;\n","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from \"react\";\nimport \"./RecipeCardLoader.css\";\n\nfunction RecipeCardLoader() {\n  return (\n    <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n      <div className=\"recipeCardLoader__wrapper\">\n        <Skeleton className=\"recipeCardLoader__header\" />\n      </div>\n    </SkeletonTheme>\n  );\n}\n\nexport default RecipeCardLoader;\n","import RecipeCardLoader from \"./RecipeCardLoader.js\";\n\nexport default RecipeCardLoader;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport RecipeCard from \"../components/RecipeCard\";\nimport PageHeader from \"../components/PageHeader\";\nimport RecipeCardLoader from \"../components/RecipeCardLoader\";\n\nfunction Recipes(props) {\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  let selectionName = \"\";\n  let queryType = \"\";\n  if (props.location.state) {\n    selectionName = props.location.state.selection;\n    queryType = props.location.state.queryParamType;\n    localStorage.setItem(\n      \"selection\",\n      JSON.stringify(props.location.state.selection)\n    );\n    localStorage.setItem(\n      \"queryType\",\n      JSON.stringify(props.location.state.queryParamType)\n    );\n  } else {\n    selectionName = JSON.parse(localStorage.getItem(\"selection\"));\n    queryType = JSON.parse(localStorage.getItem(\"queryType\"));\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://www.themealdb.com/api/json/v1/1/filter.php?` +\n          queryType +\n          selectionName\n      )\n      .then((res) => {\n        setRecipes(res.data.meals);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadError(true);\n      });\n  }, [queryType, selectionName]);\n\n  let subheader = selectionName + \" Recipes\";\n\n  const loadingCardCount = 8;\n  let cards = [...Array(loadingCardCount)].map((e, i) => (\n    <RecipeCardLoader key={i} />\n  ));\n  if (!loading) {\n    if (recipes && recipes.length > 0) {\n      cards = recipes.map((recipe) => (\n        <RecipeCard\n          key={recipe.idMeal}\n          recipe={recipe}\n          history={props.history}\n        />\n      ));\n    } else {\n      cards = (\n        <span className=\"app__infoSpan\">\n          No recipes found for your selection\n        </span>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <PageHeader subheader={subheader} history={props.history} />\n      <div className=\"app__cardsWrapper\">\n        <div className=\"app__cardsContainer\">\n          {!loadError ? cards : <span>Could not load recipes</span>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Recipes;\n","import Skeleton from \"react-loading-skeleton\";\nimport React from \"react\";\nimport \"./RecipeDetailsLoader.css\";\nimport \"../../App.css\";\n\nfunction RecipeDetailsLoader() {\n  const ingredientCount = 8;\n\n  return (\n    <React.Fragment>\n      <section role=\"loaderHeader\" className=\"recipeDetails__headerWrapper\">\n        <Skeleton className=\"app__backArrow\" />\n      </section>\n      <section className=\"recipeDetails__contentWrapper\">\n        <div className=\"recipeDetails__recipeContent\">\n          <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n          <ul className=\"recipeDetails__ingredientsList recipeDetailsLoader__ingredientsList\">\n            {[...Array(ingredientCount)].map((e, i) => (\n              <Skeleton className=\"recipeDetailsLoader__ingredients\" key={i} />\n            ))}\n          </ul>\n        </div>\n        <div className=\"recipeDetails__recipeContent\">\n          <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n          <Skeleton className=\"recipeDetails__instructionsText recipeDetailsLoader__instructions\" />\n        </div>\n        <Skeleton\n          className=\"recipeDetailsLoader__mealImage\"\n          height={250}\n          width={250}\n        />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default RecipeDetailsLoader;\n","import RecipeDetailsLoader from \"./RecipeDetailsLoader.js\";\n\nexport default RecipeDetailsLoader;\n","import \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport BackArrow from \"../images/backArrow.svg\";\nimport RecipeDetailsLoader from \"../components/RecipeDetailsLoader\";\n\nfunction RecipeDetails(props) {\n  const [recipe, setRecipe] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  let mealId = \"\";\n  if (props.location.state) {\n    mealId = props.location.state.recipe.idMeal;\n    localStorage.setItem(\"meal\", JSON.stringify(props.location.state.recipe));\n  } else {\n    mealId = JSON.parse(localStorage.getItem(\"meal\")).idMeal;\n  }\n\n  useEffect(() => {\n    axios\n      .get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=` + mealId)\n      .then((res) => {\n        setRecipe(res.data.meals[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadError(true);\n      });\n  }, [mealId]);\n\n  let ingredients = [];\n  let measurements = [];\n  for (const [key, value] of Object.entries(recipe)) {\n    if (key.includes(\"Ingredient\") && value !== null && value !== \"\") {\n      ingredients.push(value);\n    }\n    if (key.includes(\"Measure\") && value !== null && value !== \"\") {\n      measurements.push(value);\n    }\n  }\n\n  let ingredientsList = [];\n  ingredients.forEach((ingredient, index) => {\n    ingredientsList.push(measurements[index] + \" \" + ingredient);\n  });\n\n  const goBack = () => {\n    props.history.goBack();\n  };\n\n  return (\n    <div className=\"App\">\n      {loading && <RecipeDetailsLoader />}\n      {!loading && (\n        <React.Fragment>\n          <section className=\"recipeDetails__headerWrapper\">\n            <button\n              className=\"recipeDetails__backArrow app__backArrow\"\n              onClick={goBack}\n            >\n              <img\n                className=\"app__backArrowImg\"\n                src={BackArrow}\n                alt=\"go back\"\n              />\n            </button>\n            <header className=\"recipeDetails__headerText\">\n              {!loadError ? recipe.strMeal : \"Couldn't load meal\"}\n            </header>\n          </section>\n          {!loadError && (\n            <section className=\"recipeDetails__contentWrapper\">\n              <div className=\"recipeDetails__recipeContent\">\n                <span className=\"recipeDetails__recipeContentHeader\">\n                  Ingredients\n                </span>\n                <hr className=\"recipeDetails__contentSeparator\" />\n                <ul className=\"recipeDetails__ingredientsList\">\n                  {ingredientsList.map((item) => (\n                    <li key={item}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"recipeDetails__recipeContent\">\n                <span className=\"recipeDetails__recipeContentHeader\">\n                  Instructions\n                </span>\n                <hr className=\"recipeDetails__contentSeparator\" />\n                <p className=\"recipeDetails__instructionsText\">\n                  {recipe.strInstructions}\n                </p>\n              </div>\n              <img\n                role=\"recipe-image\"\n                className=\"recipeDetails__mealImage\"\n                src={recipe.strMealThumb}\n                alt=\"recipe cover\"\n              />\n            </section>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default RecipeDetails;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../App.css\";\nimport React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\nfunction PageNotFound(props) {\n  return (\n    <React.Fragment>\n      <PageHeader history={props.history} />\n      <div className=\"pageNotFound__Wrapper\">\n        <div className=\"pageNotFound__Text\">Page Not Found!</div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Categories from \"./views/Categories\";\nimport ByIngredient from \"./views/ByIngredient\";\nimport ByRegion from \"./views/ByRegion\";\nimport Recipes from \"./views/Recipes\";\nimport RecipeDetails from \"./views/RecipeDetails\";\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport PageNotFound from \"./views/PageNotFound\";\n\nconst routing = (\n  <Router>\n    <div className=\"app__wrapper\">\n      <Switch>\n        <Route exact path=\"/\" component={Categories} />\n        <Route path=\"/by-ingredient\" component={ByIngredient} />\n        <Route path=\"/by-region\" component={ByRegion} />\n        <Route path=\"/recipes/:recipeType\" component={Recipes} />\n        <Route path=\"/recipe-details/:mealId\" component={RecipeDetails} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}