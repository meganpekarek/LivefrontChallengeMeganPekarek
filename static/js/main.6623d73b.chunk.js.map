{"version":3,"sources":["components/CategoryCard/CategoryCard.js","components/CategoryCard/index.js","images/myMealLogo.svg","components/PageHeader/PageHeader.js","components/PageHeader/index.js","components/CategoryCardLoader/CategoryCardLoader.js","components/CategoryCardLoader/index.js","views/Categories.js","components/TextCard/TextCard.js","components/TextCard/index.js","components/TextCardLoader/TextCardLoader.js","components/TextCardLoader/index.js","views/ByIngredient.js","views/ByRegion.js","components/RecipeCard/RecipeCard.js","components/RecipeCard/index.js","components/RecipeCardLoader/RecipeCardLoader.js","components/RecipeCardLoader/index.js","views/Recipes.js","images/backArrow.svg","components/RecipeDetailsLoader/RecipeDetailsLoader.js","components/RecipeDetailsLoader/index.js","views/RecipeDetails.js","reportWebVitals.js","index.js"],"names":["CategoryCard","props","category","Fragment","className","onClick","history","push","pathname","state","selection","strCategory","queryParamType","src","strCategoryThumb","alt","PageHeader","loc","useLocation","useState","activeFilter","setActiveFilter","useEffect","goToFilter","filter","Logo","CategoryCardLoader","color","highlightColor","circle","height","width","Categories","categories","setCategories","loading","setLoading","axios","get","then","res","data","cards","Array","map","e","i","idCategory","subheader","TextCard","cardText","TextCardLoader","ByIngredient","ingredients","setIngredients","meals","sort","a","b","ingA","strIngredient","toUpperCase","ingB","ingredient","idIngredient","ByRegion","regions","setRegions","region","strArea","RecipeCard","recipe","strMealThumb","strMeal","RecipeCardLoader","Recipes","recipes","setRecipes","selectionName","queryType","location","localStorage","setItem","JSON","stringify","parse","getItem","length","idMeal","RecipeDetailsLoader","RecipeDetails","setRecipe","mealId","measurements","Object","entries","key","value","includes","ingredientsList","forEach","index","BackArrow","goBack","item","strInstructions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6623d73b.chunk.js","sourcesContent":["import './CategoryCard.css';\nimport React from 'react'\n\nfunction CategoryCard(props) {\n  const {category} = props;\n\n  const goToRecipes = () => {\n    props.history.push({\n      pathname: '/recipes',\n      state: {\n        selection: category.strCategory,\n        queryParamType: \"c=\"\n      }\n    })\n  }\n\n  return (\n      <React.Fragment>\n        <div className=\"categoryCard__wrapper\" onClick={goToRecipes}>\n          <div className=\"categoryCard__imgWrapper\">\n            <img className=\"categoryCard__img\" src={category.strCategoryThumb} alt=\"food-category\" />\n          </div>\n          <div>\n            <header className=\"categoryCard__header\">{category.strCategory}</header>\n          </div>\n        </div>\n      </React.Fragment>\n  );\n}\n\nexport default CategoryCard;\n","import CategoryCard from './CategoryCard.js';\n\nexport default CategoryCard;","export default __webpack_public_path__ + \"static/media/myMealLogo.52903069.svg\";","import './PageHeader.css';\nimport React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport Logo from '../../images/myMealLogo.svg'\n\nfunction PageHeader(props) {\n\n  let loc = useLocation();\n  let [activeFilter, setActiveFilter] = useState('');\n\n  useEffect(() => {\n    if(loc.pathname === '/') {\n      setActiveFilter('categories')\n    } else if (loc.pathname === '/byingredient') {\n      setActiveFilter('ingredients')\n    } else if (loc.pathname === '/byregion') {\n      setActiveFilter('regions')\n    }\n  }, [loc.pathname])\n\n  const goToFilter = (filter) => {\n    props.history.push(filter);\n  }\n\n  return (\n      <React.Fragment>\n        <div className=\"page__headerWrapper\">\n          <header className=\"page__headerText\">MY <img  className=\"page__headerLogo\" src={Logo} alt=\"my meal logo\" /> MEAL</header>\n          <div className=\"page__filtersWrapper\">\n            <span className={`page__filterOption ${activeFilter === 'categories' ? \"page__filterActive\" : \"\"}`} onClick={() => goToFilter('/')}>By Category</span>\n            <span className={`page__filterOption ${activeFilter === 'ingredients' ? \"page__filterActive\" : \"\"}`} onClick={() => goToFilter('/byingredient')}>By Ingredient</span>\n            <span className={`page__filterOption ${activeFilter === 'regions' ? \"page__filterActive\" : \"\"}`} onClick={() => goToFilter('/byregion')}>By Region</span>\n          </div>\n        </div>\n      </React.Fragment>\n  );\n}\n\nexport default PageHeader;","import PageHeader from './PageHeader.js';\n\nexport default PageHeader;","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from 'react'\nimport './CategoryCardLoader.css';\n\nfunction CategoryCardLoader() {\n\n    return (\n        <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n            <div className=\"categoryCardLoader__wrapper\">\n                <div className=\"categoryCardLoader__imgWrapper\">\n                    <Skeleton circle={true} height={70} width={70} />\n                </div>\n                <div>\n                    <Skeleton className=\"categoryCardLoader__header\" />\n                </div>\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nexport default CategoryCardLoader;\n","import CategoryCardLoader from './CategoryCardLoader.js';\n\nexport default CategoryCardLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport CategoryCard from '../components/CategoryCard'\nimport PageHeader from '../components/PageHeader'\nimport CategoryCardLoader from '../components/CategoryCardLoader'\n\nfunction Categories(props) {\n\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\n      .then(res => {\n        setCategories(res.data.categories);\n        setLoading(false);\n      })\n  }, []);\n\n  const loadingCardCount = 8;\n  let cards = ([...Array(loadingCardCount)].map((e, i) => <CategoryCardLoader key={i} />));\n  if(!loading) {\n    cards = (\n        categories.map(category => (\n          <CategoryCard key={category.idCategory} category={category} history={props.history}></CategoryCard>\n        ))\n    )\n  }\n\n  return (\n    <div className=\"App\">\n          <PageHeader subheader=\"Categories\" history={props.history} />\n          <div className=\"app__cardsWrapper\">\n            <div className=\"app__cardsContainer\">\n              {cards}\n            </div>\n          </div>\n    </div>\n  );\n}\n\nexport default Categories;\n","import './TextCard.css';\nimport React from 'react'\n\nfunction TextCard(props) {\n  const {cardText, queryParamType} = props;\n\n  const goToRecipes = () => {\n    props.history.push({\n      pathname: '/recipes',\n      state: {\n        selection: cardText,\n        queryParamType: queryParamType\n      }\n    })\n  }\n\n  return (\n      <React.Fragment>\n        <div className=\"textCard__wrapper\" onClick={goToRecipes}>\n          <div>\n            <header className=\"textCard__header\">{cardText}</header>\n          </div>\n        </div>\n      </React.Fragment>\n  );\n}\n\nexport default TextCard;\n","import TextCard from './TextCard.js';\n\nexport default TextCard;","import './TextCardLoader.css';\nimport '../TextCard/TextCard.css';\nimport React from 'react'\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nfunction TextCardLoader() {\n\n  return (\n      <React.Fragment>\n        <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n            <div className=\"textCard__wrapper\">\n              <div>\n                <Skeleton className=\"textCard__header\" />\n              </div>\n            </div>\n        </SkeletonTheme>\n      </React.Fragment>\n  );\n}\n\nexport default TextCardLoader;\n","import TextCardLoader from './TextCardLoader.js';\n\nexport default TextCardLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TextCard from '../components/TextCard'\nimport PageHeader from '../components/PageHeader'\nimport TextCardLoader from '../components/TextCardLoader'\n\nfunction ByIngredient(props) {\n\n    const [ingredients, setIngredients] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/list.php?i=list`)\n            .then(res => {\n                setIngredients(res.data.meals);\n                setLoading(false);\n            })\n    }, []);\n\n    const loadingCardCount = 16;\n    let cards = ([...Array(loadingCardCount)].map((e, i) => <TextCardLoader key={i} />));\n\n    if(!loading) {\n        let sortedIngredients = ingredients.sort((a, b) => {\n            var ingA = a.strIngredient.toUpperCase();\n            var ingB = b.strIngredient.toUpperCase();\n            if (ingA < ingB) {\n                return -1;\n            }\n            if (ingA > ingB) {\n                return 1;\n            }\n            return 0;\n        });\n    \n        cards = (\n            sortedIngredients.map(ingredient => (\n                <TextCard key={ingredient.idIngredient} cardText={ingredient.strIngredient} queryParamType=\"i=\" history={props.history}></TextCard>\n            ))\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <PageHeader subheader=\"Regions\" history={props.history} />\n            <div className=\"app__cardsWrapper\">\n                <div className=\"app__cardsContainer\">\n                    {cards}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ByIngredient;\n","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TextCard from '../components/TextCard'\nimport PageHeader from '../components/PageHeader'\nimport TextCardLoader from '../components/TextCardLoader'\n\nfunction ByRegion(props) {\n\n    const [regions, setRegions] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(`https://www.themealdb.com/api/json/v1/1/list.php?a=list`)\n            .then(res => {\n                setRegions(res.data.meals);\n                setLoading(false);\n            })\n    }, []);\n\n    const loadingCardCount = 16;\n    let cards = ([...Array(loadingCardCount)].map((e, i) => <TextCardLoader key={i} />));\n\n    if(!loading) {\n        cards = (\n            regions.map(region => (\n                <TextCard key={region.strArea} cardText={region.strArea} queryParamType=\"a=\" history={props.history}></TextCard>\n            ))\n        )\n    }\n\n    return (\n        <div className=\"App\">\n            <PageHeader subheader=\"Regions\" history={props.history} />\n            <div className=\"app__cardsWrapper\">\n                <div className=\"app__cardsContainer\">\n                    {cards}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ByRegion;\n","import './RecipeCard.css';\nimport React from 'react'\n\nfunction RecipeCard(props) {\n  const {recipe} = props;\n\n  const goToRecipe = () => {\n    props.history.push({\n      pathname: '/recipedetails',\n      state: {\n        recipe: recipe\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <div className=\"recipeCard__wrapper\" onClick={goToRecipe}>\n          <img className=\"recipeCard__img\" src={recipe.strMealThumb} alt=\"recipe-cover\" />\n          <div className=\"recipeCard__headerWrapper\">\n            <header className=\"recipeCard__header\">{recipe.strMeal}</header>\n          </div>\n        </div>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default RecipeCard;","import RecipeCard from './RecipeCard.js';\n\nexport default RecipeCard;","import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport React from 'react'\nimport './RecipeCardLoader.css';\n\nfunction RecipeCardLoader() {\n\n    return (\n        <SkeletonTheme color=\"white\" highlightColor=\"lightgrey\">\n            <div className=\"recipeCardLoader__wrapper\">\n                <Skeleton className=\"recipeCardLoader__header\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nexport default RecipeCardLoader;\n","import RecipeCardLoader from './RecipeCardLoader.js';\n\nexport default RecipeCardLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport RecipeCard from '../components/RecipeCard'\nimport PageHeader from '../components/PageHeader'\nimport RecipeCardLoader from '../components/RecipeCardLoader'\n\nfunction Recipes(props) {\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  let selectionName = \"\"\n  let queryType = \"\"\n  if(props.location.state) {\n    selectionName = props.location.state.selection;\n    queryType = props.location.state.queryParamType;\n    localStorage.setItem('selection', JSON.stringify(props.location.state.selection));\n    localStorage.setItem('queryType', JSON.stringify(props.location.state.queryParamType));\n  } else {\n    selectionName = JSON.parse(localStorage.getItem('selection'));\n    queryType = JSON.parse(localStorage.getItem('queryType'));\n  }\n   \n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?` + queryType + selectionName)\n      .then(res => {\n        setRecipes(res.data.meals);\n        setLoading(false);\n      })\n  }, [queryType, selectionName]);\n\n  let subheader = selectionName + ' Recipes'\n\n  const loadingCardCount = 8;\n  let cards = ([...Array(loadingCardCount)].map((e, i) => <RecipeCardLoader key={i} />));\n  if(!loading) {\n    if(recipes && recipes.length > 0) {\n      cards = (\n        recipes.map(recipe => (\n          <RecipeCard key={recipe.idMeal} recipe={recipe}  history={props.history}></RecipeCard>\n        ))\n      )\n    } else {\n      cards = <span className=\"app__infoSpan\">No recipes found for your selection</span>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n          <PageHeader subheader={subheader} history={props.history} />\n          <div className=\"app__cardsWrapper\">\n            <div className=\"app__cardsContainer\">\n              {cards}\n            </div>\n          </div>\n    </div>\n  );\n}\n\nexport default Recipes;\n","export default __webpack_public_path__ + \"static/media/backArrow.dfac1a3f.svg\";","import Skeleton from \"react-loading-skeleton\";\nimport React from 'react'\nimport './RecipeDetailsLoader.css';\nimport '../../App.css'\n\nfunction RecipeDetailsLoader() {\n\n    const ingredientCount = 8;\n\n    return (\n            <React.Fragment>\n                <section className=\"recipeDetails__headerWrapper\">\n                    <Skeleton className=\"backArrow\" />\n                </section>\n                <section className=\"recipeDetails__contentWrapper\">\n                    <div className=\"recipeDetails__recipeContent\">\n                        <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n                        <ul className=\"recipeDetails__ingredientsList recipeDetailsLoader__ingredientsList\">\n                            {[...Array(ingredientCount)].map((e, i) => <Skeleton className=\"recipeDetailsLoader__ingredients\" key={i} />)}\n                        </ul>\n                    </div>\n                    <div className=\"recipeDetails__recipeContent\">\n                        <Skeleton className=\"recipeDetails__recipeContentHeader\" />\n                        <Skeleton className=\"recipeDetails__instructionsText recipeDetailsLoader__instructions\" />\n                    </div>\n                    <Skeleton className=\"recipeDetailsLoader__mealImage\" height={250} width={250}/>\n                </section>\n            </React.Fragment>\n    );\n}\n\nexport default RecipeDetailsLoader;\n","import RecipeDetailsLoader from './RecipeDetailsLoader.js';\n\nexport default RecipeDetailsLoader;","import '../App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport BackArrow from '../images/backArrow.svg'\nimport RecipeDetailsLoader from '../components/RecipeDetailsLoader';\n\nfunction RecipeDetails(props) {\n\n  const [recipe, setRecipe] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  let mealId = \"\"\n  if(props.location.state) {\n    mealId = props.location.state.recipe.idMeal;\n    localStorage.setItem('meal', JSON.stringify(props.location.state.recipe));\n  } else {\n    mealId = JSON.parse(localStorage.getItem('meal')).idMeal;\n  }\n\n  useEffect(() => {\n    axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=` + mealId)\n      .then(res => {\n        setRecipe(res.data.meals[0]);\n        setLoading(false);\n      })\n  }, [mealId]);\n\n  let ingredients = [];\n  let measurements = [];\n  for (const [key, value] of Object.entries(recipe)) {\n    if(key.includes('Ingredient') && value !== null && value !== \"\") {\n      ingredients.push(value)\n    }\n    if(key.includes('Measure') && value !== null && value !== \"\") {\n      measurements.push(value)\n    }\n  };\n\n  let ingredientsList = []\n  ingredients.forEach((ingredient, index) => {\n    ingredientsList.push(measurements[index] + ' ' + ingredient);\n  });\n\n  const goBack = () => {\n    props.history.goBack();\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loading && (\n        <RecipeDetailsLoader />\n      )}\n      {!loading && (\n        <React.Fragment>\n          <section className=\"recipeDetails__headerWrapper\">\n            <img className=\"backArrow\" src={BackArrow} onClick={goBack} alt=\"back-arrow\" />\n            <header className=\"recipeDetails__headerText\">{recipe.strMeal}</header>\n          </section>\n          <section className=\"recipeDetails__contentWrapper\">\n            <div className=\"recipeDetails__recipeContent\">\n              <span className=\"recipeDetails__recipeContentHeader\">Ingredients</span>\n              <hr className=\"recipeDetails__contentSeparator\" />\n              <ul className=\"recipeDetails__ingredientsList\">\n                {ingredientsList.map(item => (\n                  <li key={item}>{item}</li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"recipeDetails__recipeContent\">\n              <span className=\"recipeDetails__recipeContentHeader\">Instructions</span>\n              <hr className=\"recipeDetails__contentSeparator\" />\n              <p className=\"recipeDetails__instructionsText\">\n                {recipe.strInstructions}\n              </p>\n            </div>\n            <img className=\"recipeDetails__mealImage\" src={recipe.strMealThumb} alt=\"recipe-cover\" />\n          </section>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default RecipeDetails;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Categories from './views/Categories'\nimport ByIngredient from './views/ByIngredient'\nimport ByRegion from './views/ByRegion'\nimport Recipes from './views/Recipes'\nimport RecipeDetails from './views/RecipeDetails'\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nconst routing = (\n  <Router>\n    <div className=\"app__wrapper\">\n      <Switch>\n        <Route exact path=\"/\" component={Categories} />\n        <Route path=\"/byingredient\" component={ByIngredient} />\n        <Route path=\"/byregion\" component={ByRegion} />\n        <Route path=\"/recipes\" component={Recipes} />\n        <Route path=\"/recipedetails\" component={RecipeDetails} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}